{
  "version": 3,
  "sources": [
    "/Users/roymartin/Code/www/roy-martin/app/scripts/vendor/threejs/CanvasRenderer.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "/Users/roymartin/Code/www/roy-martin/app/scripts/vendor/threejs/CanvasRenderer.js",
  "sourcesContent": [
    "/**\n* @author mrdoob / http://mrdoob.com/\n*/\nimport THREE from 'three';\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n    THREE.Material.call( this );\n\n    this.type = 'SpriteCanvasMaterial';\n\n    this.color = new THREE.Color( 0xffffff );\n    this.program = function ( context, color ) {};\n\n    this.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n    var material = new THREE.SpriteCanvasMaterial();\n\n    THREE.Material.prototype.clone.call( this, material );\n\n    material.color.copy( this.color );\n    material.program = this.program;\n\n    return material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n    console.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n    var smoothstep = THREE.Math.smoothstep;\n\n    parameters = parameters || {};\n\n    var _this = this,\n    _renderData, _elements, _lights,\n    _projector = new THREE.Projector(),\n\n    _canvas = parameters.canvas !== undefined\n    ? parameters.canvas\n    : document.createElement( 'canvas' ),\n\n    _canvasWidth = _canvas.width,\n    _canvasHeight = _canvas.height,\n    _canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n    _canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n    _viewportX = 0,\n    _viewportY = 0,\n    _viewportWidth = _canvasWidth,\n    _viewportHeight = _canvasHeight,\n\n    pixelRatio = 1,\n\n    _context = _canvas.getContext( '2d', {\n        alpha: parameters.alpha === true\n    } ),\n\n    _clearColor = new THREE.Color( 0x000000 ),\n    _clearAlpha = parameters.alpha === true ? 0 : 1,\n\n    _contextGlobalAlpha = 1,\n    _contextGlobalCompositeOperation = 0,\n    _contextStrokeStyle = null,\n    _contextFillStyle = null,\n    _contextLineWidth = null,\n    _contextLineCap = null,\n    _contextLineJoin = null,\n    _contextLineDash = [],\n\n    _camera,\n\n    _v1, _v2, _v3, _v4,\n    _v5,\n    _v6,\n\n    _v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n    _v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n    _color = new THREE.Color(),\n    _color1 = new THREE.Color(),\n    _color2 = new THREE.Color(),\n    _color3 = new THREE.Color(),\n    _color4 = new THREE.Color(),\n\n    _diffuseColor = new THREE.Color(),\n    _emissiveColor = new THREE.Color(),\n\n    _lightColor = new THREE.Color(),\n\n    _patterns = {},\n\n    _image, _uvs,\n    _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n    _clipBox = new THREE.Box2(),\n    _clearBox = new THREE.Box2(),\n    _elemBox = new THREE.Box2(),\n\n    _ambientLight = new THREE.Color(),\n    _directionalLights = new THREE.Color(),\n    _pointLights = new THREE.Color(),\n\n    _vector3 = new THREE.Vector3(), // Needed for PointLight\n    _centroid = new THREE.Vector3(),\n    _normal = new THREE.Vector3(),\n    _normalViewMatrix = new THREE.Matrix3();\n\n    // dash+gap fallbacks for Firefox and everything else\n\n    if ( _context.setLineDash === undefined ) {\n\n        _context.setLineDash = function () {}\n\n    }\n\n    this.domElement = _canvas;\n\n    this.autoClear = true;\n    this.sortObjects = true;\n    this.sortElements = true;\n\n    this.info = {\n\n        render: {\n\n            vertices: 0,\n            faces: 0\n\n        }\n\n    }\n\n    // WebGLRenderer compatibility\n\n    this.supportsVertexTextures = function () {};\n    this.setFaceCulling = function () {};\n\n    //\n\n    this.getPixelRatio = function () {\n\n        return pixelRatio;\n\n    };\n\n    this.setPixelRatio = function ( value ) {\n\n        pixelRatio = value;\n\n    };\n\n    this.setSize = function ( width, height, updateStyle ) {\n\n        _canvasWidth = width * pixelRatio;\n        _canvasHeight = height * pixelRatio;\n\n        _canvas.width = _canvasWidth;\n        _canvas.height = _canvasHeight;\n\n        _canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n        _canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n        if ( updateStyle !== false ) {\n\n            _canvas.style.width = width + 'px';\n            _canvas.style.height = height + 'px';\n\n        }\n\n        _clipBox.min.set( -_canvasWidthHalf, -_canvasHeightHalf ),\n        _clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n        _clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n        _clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n        _contextGlobalAlpha = 1;\n        _contextGlobalCompositeOperation = 0;\n        _contextStrokeStyle = null;\n        _contextFillStyle = null;\n        _contextLineWidth = null;\n        _contextLineCap = null;\n        _contextLineJoin = null;\n\n        this.setViewport( 0, 0, width, height );\n\n    };\n\n    this.setViewport = function ( x, y, width, height ) {\n\n        _viewportX = x * pixelRatio;\n        _viewportY = y * pixelRatio;\n\n        _viewportWidth = width * pixelRatio;\n        _viewportHeight = height * pixelRatio;\n\n    };\n\n    this.setScissor = function () {};\n    this.enableScissorTest = function () {};\n\n    this.setClearColor = function ( color, alpha ) {\n\n        _clearColor.set( color );\n        _clearAlpha = alpha !== undefined ? alpha : 1;\n\n        _clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n        _clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n    };\n\n    this.setClearColorHex = function ( hex, alpha ) {\n\n        console.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n        this.setClearColor( hex, alpha );\n\n    };\n\n    this.getClearColor = function () {\n\n        return _clearColor;\n\n    };\n\n    this.getClearAlpha = function () {\n\n        return _clearAlpha;\n\n    };\n\n    this.getMaxAnisotropy = function () {\n\n        return 0;\n\n    };\n\n    this.clear = function () {\n\n        if ( _clearBox.empty() === false ) {\n\n            _clearBox.intersect( _clipBox );\n            _clearBox.expandByScalar( 2 );\n\n            _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n            _clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n            _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n            _clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n            if ( _clearAlpha < 1 ) {\n\n                _context.clearRect(\n                    _clearBox.min.x | 0,\n                    _clearBox.max.y | 0,\n                    ( _clearBox.max.x - _clearBox.min.x ) | 0,\n                    ( _clearBox.min.y - _clearBox.max.y ) | 0\n                );\n\n            }\n\n            if ( _clearAlpha > 0 ) {\n\n                setBlending( THREE.NormalBlending );\n                setOpacity( 1 );\n\n                setFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n                _context.fillRect(\n                    _clearBox.min.x | 0,\n                    _clearBox.max.y | 0,\n                    ( _clearBox.max.x - _clearBox.min.x ) | 0,\n                    ( _clearBox.min.y - _clearBox.max.y ) | 0\n                );\n\n            }\n\n            _clearBox.makeEmpty();\n\n        }\n\n    };\n\n    // compatibility\n\n    this.clearColor = function () {};\n    this.clearDepth = function () {};\n    this.clearStencil = function () {};\n\n    this.render = function ( scene, camera ) {\n\n        if ( camera instanceof THREE.Camera === false ) {\n\n            console.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n            return;\n\n        }\n\n        if ( this.autoClear === true ) this.clear();\n\n        _this.info.render.vertices = 0;\n        _this.info.render.faces = 0;\n\n        _context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n        _context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n        _renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n        _elements = _renderData.elements;\n        _lights = _renderData.lights;\n        _camera = camera;\n\n        _normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n        /* DEBUG\n        setFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n        _context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n        */\n\n        calculateLights();\n\n        for ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n            var element = _elements[ e ];\n\n            var material = element.material;\n\n            if ( material === undefined || material.opacity === 0 ) continue;\n\n            _elemBox.makeEmpty();\n\n            if ( element instanceof THREE.RenderableSprite ) {\n\n                _v1 = element;\n                _v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n                renderSprite( _v1, element, material );\n\n            } else if ( element instanceof THREE.RenderableLine ) {\n\n                _v1 = element.v1; _v2 = element.v2;\n\n                _v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n                _v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n                _elemBox.setFromPoints( [\n                    _v1.positionScreen,\n                    _v2.positionScreen\n                    ] );\n\n                    if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\n\n                        renderLine( _v1, _v2, element, material );\n\n                    }\n\n                } else if ( element instanceof THREE.RenderableFace ) {\n\n                    _v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n                    if ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n                    if ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n                    if ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n                    _v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n                    _v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n                    _v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n                    if ( material.overdraw > 0 ) {\n\n                        expand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n                        expand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n                        expand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n                    }\n\n                    _elemBox.setFromPoints( [\n                        _v1.positionScreen,\n                        _v2.positionScreen,\n                        _v3.positionScreen\n                        ] );\n\n                        if ( _clipBox.isIntersectionBox( _elemBox ) === true ) {\n\n                            renderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n                        }\n\n                    }\n\n                    /* DEBUG\n                    setLineWidth( 1 );\n                    setStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n                    _context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n                    */\n\n                    _clearBox.union( _elemBox );\n\n                }\n\n                /* DEBUG\n                setLineWidth( 1 );\n                setStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n                _context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n                */\n\n                _context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n            };\n\n            //\n\n            function calculateLights() {\n\n                _ambientLight.setRGB( 0, 0, 0 );\n                _directionalLights.setRGB( 0, 0, 0 );\n                _pointLights.setRGB( 0, 0, 0 );\n\n                for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n                    var light = _lights[ l ];\n                    var lightColor = light.color;\n\n                    if ( light instanceof THREE.AmbientLight ) {\n\n                        _ambientLight.add( lightColor );\n\n                    } else if ( light instanceof THREE.DirectionalLight ) {\n\n                        // for sprites\n\n                        _directionalLights.add( lightColor );\n\n                    } else if ( light instanceof THREE.PointLight ) {\n\n                        // for sprites\n\n                        _pointLights.add( lightColor );\n\n                    }\n\n                }\n\n            }\n\n            function calculateLight( position, normal, color ) {\n\n                for ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n                    var light = _lights[ l ];\n\n                    _lightColor.copy( light.color );\n\n                    if ( light instanceof THREE.DirectionalLight ) {\n\n                        var lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n                        var amount = normal.dot( lightPosition );\n\n                        if ( amount <= 0 ) continue;\n\n                        amount *= light.intensity;\n\n                        color.add( _lightColor.multiplyScalar( amount ) );\n\n                    } else if ( light instanceof THREE.PointLight ) {\n\n                        var lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n                        var amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n                        if ( amount <= 0 ) continue;\n\n                        amount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n                        if ( amount == 0 ) continue;\n\n                        amount *= light.intensity;\n\n                        color.add( _lightColor.multiplyScalar( amount ) );\n\n                    }\n\n                }\n\n            }\n\n            function renderSprite( v1, element, material ) {\n\n                setOpacity( material.opacity );\n                setBlending( material.blending );\n\n                var scaleX = element.scale.x * _canvasWidthHalf;\n                var scaleY = element.scale.y * _canvasHeightHalf;\n\n                var dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n                _elemBox.min.set( v1.x - dist, v1.y - dist );\n                _elemBox.max.set( v1.x + dist, v1.y + dist );\n\n                if ( material instanceof THREE.SpriteMaterial ) {\n\n                    var texture = material.map;\n\n                    if ( texture !== null && texture.image !== undefined ) {\n\n                        if ( texture.hasEventListener( 'update', onTextureUpdate ) === false ) {\n\n                            if ( texture.image.width > 0 ) {\n\n                                textureToPattern( texture );\n\n                            }\n\n                            texture.addEventListener( 'update', onTextureUpdate );\n\n                        }\n\n                        var pattern = _patterns[ texture.id ];\n\n                        if ( pattern !== undefined ) {\n\n                            setFillStyle( pattern );\n\n                        } else {\n\n                            setFillStyle( 'rgba( 0, 0, 0, 1 )' );\n\n                        }\n\n                        //\n\n                        var bitmap = texture.image;\n\n                        var ox = bitmap.width * texture.offset.x;\n                        var oy = bitmap.height * texture.offset.y;\n\n                        var sx = bitmap.width * texture.repeat.x;\n                        var sy = bitmap.height * texture.repeat.y;\n\n                        var cx = scaleX / sx;\n                        var cy = scaleY / sy;\n\n                        _context.save();\n                        _context.translate( v1.x, v1.y );\n                        if ( material.rotation !== 0 ) _context.rotate( material.rotation );\n                        _context.translate( - scaleX / 2, - scaleY / 2 );\n                        _context.scale( cx, cy );\n                        _context.translate( - ox, - oy );\n                        _context.fillRect( ox, oy, sx, sy );\n                        _context.restore();\n\n                    } else {\n\n                        // no texture\n\n                        setFillStyle( material.color.getStyle() );\n\n                        _context.save();\n                        _context.translate( v1.x, v1.y );\n                        if ( material.rotation !== 0 ) _context.rotate( material.rotation );\n                        _context.scale( scaleX, - scaleY );\n                        _context.fillRect( - 0.5, - 0.5, 1, 1 );\n                        _context.restore();\n\n                    }\n\n                } else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\n                    setStrokeStyle( material.color.getStyle() );\n                    setFillStyle( material.color.getStyle() );\n\n                    _context.save();\n                    _context.translate( v1.x, v1.y );\n                    if ( material.rotation !== 0 ) _context.rotate( material.rotation );\n                    _context.scale( scaleX, scaleY );\n\n                    material.program( _context );\n\n                    _context.restore();\n\n                }\n\n                /* DEBUG\n                setStrokeStyle( 'rgb(255,255,0)' );\n                _context.beginPath();\n                _context.moveTo( v1.x - 10, v1.y );\n                _context.lineTo( v1.x + 10, v1.y );\n                _context.moveTo( v1.x, v1.y - 10 );\n                _context.lineTo( v1.x, v1.y + 10 );\n                _context.stroke();\n                */\n\n            }\n\n            function renderLine( v1, v2, element, material ) {\n\n                setOpacity( material.opacity );\n                setBlending( material.blending );\n\n                _context.beginPath();\n                _context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n                _context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n                if ( material instanceof THREE.LineBasicMaterial ) {\n\n                    setLineWidth( material.linewidth );\n                    setLineCap( material.linecap );\n                    setLineJoin( material.linejoin );\n\n                    if ( material.vertexColors !== THREE.VertexColors ) {\n\n                        setStrokeStyle( material.color.getStyle() );\n\n                    } else {\n\n                        var colorStyle1 = element.vertexColors[ 0 ].getStyle();\n                        var colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n                        if ( colorStyle1 === colorStyle2 ) {\n\n                            setStrokeStyle( colorStyle1 );\n\n                        } else {\n\n                            try {\n\n                                var grad = _context.createLinearGradient(\n                                    v1.positionScreen.x,\n                                    v1.positionScreen.y,\n                                    v2.positionScreen.x,\n                                    v2.positionScreen.y\n                                );\n                                grad.addColorStop( 0, colorStyle1 );\n                                grad.addColorStop( 1, colorStyle2 );\n\n                            } catch ( exception ) {\n\n                                grad = colorStyle1;\n\n                            }\n\n                            setStrokeStyle( grad );\n\n                        }\n\n                    }\n\n                    _context.stroke();\n                    _elemBox.expandByScalar( material.linewidth * 2 );\n\n                } else if ( material instanceof THREE.LineDashedMaterial ) {\n\n                    setLineWidth( material.linewidth );\n                    setLineCap( material.linecap );\n                    setLineJoin( material.linejoin );\n                    setStrokeStyle( material.color.getStyle() );\n                    setLineDash( [ material.dashSize, material.gapSize ] );\n\n                    _context.stroke();\n\n                    _elemBox.expandByScalar( material.linewidth * 2 );\n\n                    setLineDash( [] );\n\n                }\n\n            }\n\n            function renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n                _this.info.render.vertices += 3;\n                _this.info.render.faces ++;\n\n                setOpacity( material.opacity );\n                setBlending( material.blending );\n\n                _v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n                _v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n                _v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n                drawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n                if ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\n                    _diffuseColor.copy( material.color );\n                    _emissiveColor.copy( material.emissive );\n\n                    if ( material.vertexColors === THREE.FaceColors ) {\n\n                        _diffuseColor.multiply( element.color );\n\n                    }\n\n                    _color.copy( _ambientLight );\n\n                    _centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n                    calculateLight( _centroid, element.normalModel, _color );\n\n                    _color.multiply( _diffuseColor ).add( _emissiveColor );\n\n                    material.wireframe === true\n                    ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n                    : fillPath( _color );\n\n                } else if ( material instanceof THREE.MeshBasicMaterial ||\n                    material instanceof THREE.MeshLambertMaterial ||\n                    material instanceof THREE.MeshPhongMaterial ) {\n\n                        if ( material.map !== null ) {\n\n                            var mapping = material.map.mapping;\n\n                            if ( mapping === THREE.UVMapping ) {\n\n                                _uvs = element.uvs;\n                                patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n                            }\n\n                        } else if ( material.envMap !== null ) {\n\n                            if ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n                                _normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n                                _uv1x = 0.5 * _normal.x + 0.5;\n                                _uv1y = 0.5 * _normal.y + 0.5;\n\n                                _normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n                                _uv2x = 0.5 * _normal.x + 0.5;\n                                _uv2y = 0.5 * _normal.y + 0.5;\n\n                                _normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n                                _uv3x = 0.5 * _normal.x + 0.5;\n                                _uv3y = 0.5 * _normal.y + 0.5;\n\n                                patternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n                            }\n\n                        } else {\n\n                            _color.copy( material.color );\n\n                            if ( material.vertexColors === THREE.FaceColors ) {\n\n                                _color.multiply( element.color );\n\n                            }\n\n                            material.wireframe === true\n                            ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n                            : fillPath( _color );\n\n                        }\n\n                    } else if ( material instanceof THREE.MeshDepthMaterial ) {\n\n                        _color.r = _color.g = _color.b = 1 - smoothstep( v1.positionScreen.z * v1.positionScreen.w, _camera.near, _camera.far );\n\n                        material.wireframe === true\n                        ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n                        : fillPath( _color );\n\n                    } else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n                        _normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n                        _color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n                        material.wireframe === true\n                        ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n                        : fillPath( _color );\n\n                    } else {\n\n                        _color.setRGB( 1, 1, 1 );\n\n                        material.wireframe === true\n                        ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n                        : fillPath( _color );\n\n                    }\n\n                }\n\n                //\n\n                function drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n                    _context.beginPath();\n                    _context.moveTo( x0, y0 );\n                    _context.lineTo( x1, y1 );\n                    _context.lineTo( x2, y2 );\n                    _context.closePath();\n\n                }\n\n                function strokePath( color, linewidth, linecap, linejoin ) {\n\n                    setLineWidth( linewidth );\n                    setLineCap( linecap );\n                    setLineJoin( linejoin );\n                    setStrokeStyle( color.getStyle() );\n\n                    _context.stroke();\n\n                    _elemBox.expandByScalar( linewidth * 2 );\n\n                }\n\n                function fillPath( color ) {\n\n                    setFillStyle( color.getStyle() );\n                    _context.fill();\n\n                }\n\n                function onTextureUpdate ( event ) {\n\n                    textureToPattern( event.target );\n\n                }\n\n                function textureToPattern( texture ) {\n\n                    if ( texture instanceof THREE.CompressedTexture ) return;\n\n                    var repeatX = texture.wrapS === THREE.RepeatWrapping;\n                    var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\n                    var image = texture.image;\n\n                    var canvas = document.createElement( 'canvas' );\n                    canvas.width = image.width;\n                    canvas.height = image.height;\n\n                    var context = canvas.getContext( '2d' );\n                    context.setTransform( 1, 0, 0, - 1, 0, image.height );\n                    context.drawImage( image, 0, 0 );\n\n                    _patterns[ texture.id ] = _context.createPattern(\n                        canvas, repeatX === true && repeatY === true\n                        ? 'repeat'\n                        : repeatX === true && repeatY === false\n                        ? 'repeat-x'\n                        : repeatX === false && repeatY === true\n                        ? 'repeat-y'\n                        : 'no-repeat'\n                    );\n\n                }\n\n                function patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n                    if ( texture instanceof THREE.DataTexture ) return;\n\n                    if ( texture.hasEventListener( 'update', onTextureUpdate ) === false ) {\n\n                        if ( texture.image !== undefined && texture.image.width > 0 ) {\n\n                            textureToPattern( texture );\n\n                        }\n\n                        texture.addEventListener( 'update', onTextureUpdate );\n\n                    }\n\n                    var pattern = _patterns[ texture.id ];\n\n                    if ( pattern !== undefined ) {\n\n                        setFillStyle( pattern );\n\n                    } else {\n\n                        setFillStyle( 'rgba(0,0,0,1)' );\n                        _context.fill();\n\n                        return;\n\n                    }\n\n                    // http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n                    var a, b, c, d, e, f, det, idet,\n                    offsetX = texture.offset.x / texture.repeat.x,\n                    offsetY = texture.offset.y / texture.repeat.y,\n                    width = texture.image.width * texture.repeat.x,\n                    height = texture.image.height * texture.repeat.y;\n\n                    u0 = ( u0 + offsetX ) * width;\n                    v0 = ( v0 + offsetY ) * height;\n\n                    u1 = ( u1 + offsetX ) * width;\n                    v1 = ( v1 + offsetY ) * height;\n\n                    u2 = ( u2 + offsetX ) * width;\n                    v2 = ( v2 + offsetY ) * height;\n\n                    x1 -= x0; y1 -= y0;\n                    x2 -= x0; y2 -= y0;\n\n                    u1 -= u0; v1 -= v0;\n                    u2 -= u0; v2 -= v0;\n\n                    det = u1 * v2 - u2 * v1;\n\n                    if ( det === 0 ) return;\n\n                    idet = 1 / det;\n\n                    a = ( v2 * x1 - v1 * x2 ) * idet;\n                    b = ( v2 * y1 - v1 * y2 ) * idet;\n                    c = ( u1 * x2 - u2 * x1 ) * idet;\n                    d = ( u1 * y2 - u2 * y1 ) * idet;\n\n                    e = x0 - a * u0 - c * v0;\n                    f = y0 - b * u0 - d * v0;\n\n                    _context.save();\n                    _context.transform( a, b, c, d, e, f );\n                    _context.fill();\n                    _context.restore();\n\n                }\n\n                function clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n                    // http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n                    var a, b, c, d, e, f, det, idet,\n                    width = image.width - 1,\n                    height = image.height - 1;\n\n                    u0 *= width; v0 *= height;\n                    u1 *= width; v1 *= height;\n                    u2 *= width; v2 *= height;\n\n                    x1 -= x0; y1 -= y0;\n                    x2 -= x0; y2 -= y0;\n\n                    u1 -= u0; v1 -= v0;\n                    u2 -= u0; v2 -= v0;\n\n                    det = u1 * v2 - u2 * v1;\n\n                    idet = 1 / det;\n\n                    a = ( v2 * x1 - v1 * x2 ) * idet;\n                    b = ( v2 * y1 - v1 * y2 ) * idet;\n                    c = ( u1 * x2 - u2 * x1 ) * idet;\n                    d = ( u1 * y2 - u2 * y1 ) * idet;\n\n                    e = x0 - a * u0 - c * v0;\n                    f = y0 - b * u0 - d * v0;\n\n                    _context.save();\n                    _context.transform( a, b, c, d, e, f );\n                    _context.clip();\n                    _context.drawImage( image, 0, 0 );\n                    _context.restore();\n\n                }\n\n                // Hide anti-alias gaps\n\n                function expand( v1, v2, pixels ) {\n\n                    var x = v2.x - v1.x, y = v2.y - v1.y,\n                    det = x * x + y * y, idet;\n\n                    if ( det === 0 ) return;\n\n                    idet = pixels / Math.sqrt( det );\n\n                    x *= idet; y *= idet;\n\n                    v2.x += x; v2.y += y;\n                    v1.x -= x; v1.y -= y;\n\n                }\n\n                // Context cached methods.\n\n                function setOpacity( value ) {\n\n                    if ( _contextGlobalAlpha !== value ) {\n\n                        _context.globalAlpha = value;\n                        _contextGlobalAlpha = value;\n\n                    }\n\n                }\n\n                function setBlending( value ) {\n\n                    if ( _contextGlobalCompositeOperation !== value ) {\n\n                        if ( value === THREE.NormalBlending ) {\n\n                            _context.globalCompositeOperation = 'source-over';\n\n                        } else if ( value === THREE.AdditiveBlending ) {\n\n                            _context.globalCompositeOperation = 'lighter';\n\n                        } else if ( value === THREE.SubtractiveBlending ) {\n\n                            _context.globalCompositeOperation = 'darker';\n\n                        }\n\n                        _contextGlobalCompositeOperation = value;\n\n                    }\n\n                }\n\n                function setLineWidth( value ) {\n\n                    if ( _contextLineWidth !== value ) {\n\n                        _context.lineWidth = value;\n                        _contextLineWidth = value;\n\n                    }\n\n                }\n\n                function setLineCap( value ) {\n\n                    // \"butt\", \"round\", \"square\"\n\n                    if ( _contextLineCap !== value ) {\n\n                        _context.lineCap = value;\n                        _contextLineCap = value;\n\n                    }\n\n                }\n\n                function setLineJoin( value ) {\n\n                    // \"round\", \"bevel\", \"miter\"\n\n                    if ( _contextLineJoin !== value ) {\n\n                        _context.lineJoin = value;\n                        _contextLineJoin = value;\n\n                    }\n\n                }\n\n                function setStrokeStyle( value ) {\n\n                    if ( _contextStrokeStyle !== value ) {\n\n                        _context.strokeStyle = value;\n                        _contextStrokeStyle = value;\n\n                    }\n\n                }\n\n                function setFillStyle( value ) {\n\n                    if ( _contextFillStyle !== value ) {\n\n                        _context.fillStyle = value;\n                        _contextFillStyle = value;\n\n                    }\n\n                }\n\n                function setLineDash( value ) {\n\n                    if ( _contextLineDash.length !== value.length ) {\n\n                        _context.setLineDash( value );\n                        _contextLineDash = value;\n\n                    }\n\n                }\n\n            };\n"
  ],
  "sourceRoot": ""
}